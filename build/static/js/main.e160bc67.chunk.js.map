{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/App.jsx","index.js","components/App.module.css","components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","images/image.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","Date","toLocaleDateString","url","fetchData","country","a","changeableUrl","axios","get","console","log","fetchDailyData","modifiedData","map","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","fetchAPI","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","title","text","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","FormControl","formControl","NativeSelect","default","onChange","e","target","index","key","App","state","fetchedData","setState","this","src","covidImage","alt","image","React","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.e160bc67.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from \"react\";\nimport { Card, CardContent, Typography, Grid } from \"@material-ui/core\";\nimport styles from \"./Cards.module.css\";\nimport CountUp from \"react-countup\";\nimport cx from \"classnames\";\n\nfunction Cards({ data: { confirmed, recovered, deaths, lastUpdate } }) {\n    // console.log(data);\n    if (!confirmed) {\n        return \"Loading.....\";\n    }\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={confirmed.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active Cases of Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recoveries</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={recovered.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries from Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp start={0} end={deaths.value} duration={2.5} separator=\",\" />\n                        </Typography>\n                        <Typography color=\"textSecondary\">{new Date(lastUpdate).toLocaleDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths caused by Covid-19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    );\n}\n\nexport default Cards;","import axios from \"axios\";\n\nconst url = \"https://covid19.mathdro.id/api\";\n\nexport const fetchData = async (country) => {\n    let changeableUrl = url;\n    if (country) {\n        changeableUrl = url + \"/countries/\" + country;\n    }\n    try {\n        const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\n        return { confirmed, recovered, deaths, lastUpdate };\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const { data } = await axios.get(url + \"/daily\");\n        const modifiedData = data.map((dailyData) => ({\n            confirmed: dailyData.confirmed.total,\n            deaths: dailyData.deaths.total,\n            date: dailyData.reportDate,\n        }));\n        return modifiedData;\n    } catch (error) {\n        console.log(error);\n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const { data: { countries } } = await axios.get(url + \"/countries\");\n        return countries.map((country) => country.name);\n    } catch (error) {\n        console.log(error);\n    }\n}","import React, { useState, useEffect } from \"react\";\nimport { fetchDailyData } from \"./../../api\";\nimport { Line, Bar } from \"react-chartjs-2\";\nimport styles from \"./Chart.module.css\";\n\nfunction Chart({ data: { confirmed, recovered, deaths }, country }) {\n    const [dailyData, setDailyData] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setDailyData(await fetchDailyData());\n        }\n        fetchAPI();\n        // console.log(dailyData);\n    }, []);\n\n    const lineChart = (\n        dailyData.length !== 0 ? (\n            <Line\n                data={{\n                    labels: dailyData.map(({ date }) => date),\n                    datasets: [{\n                        data: dailyData.map(({ confirmed }) => confirmed),\n                        label: \"Infected\",\n                        borderColor: \"#3333ff\",\n                        fill: true,\n                    }, {\n                        data: dailyData.map(({ deaths }) => deaths),\n                        label: \"Deaths\",\n                        borderColor: \"#red\",\n                        backgroundColor: \"rgba(255,0,0,0.5)\",\n                        fill: true,\n                    }],\n                }}\n            />) : null\n    );\n\n    const barChart = (\n        confirmed ? (\n            <Bar\n                data={{\n                    labels: [\"Infected\", \"Recovered\", \"Deaths\"],\n                    datasets: [{\n                        label: \"People\",\n                        backgroundColor: [\n                            \"rgba(0,0 , 255, 0.75)\",\n                            \"rgba(0,255 , 0, 0.75)\",\n                            \"rgba(255,0 , 0, 0.75)\"\n                        ],\n                        data: [confirmed.value, recovered.value, deaths.value]\n                    }]\n                }}\n                options={{\n                    legend: { display: false },\n                    title: { display: true, text: \"Current state in \" + country },\n                }}\n            />\n        ) : null\n    );\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    );\n}\n\nexport default Chart;","import React, { useState, useEffect } from \"react\";\nimport { NativeSelect, FormControl } from \"@material-ui/core\";\nimport styles from \"./CountryPicker.module.css\";\nimport { fetchCountries } from \"./../../api\";\n\nfunction CountryPicker({ handleCountryChange }) {\n    const [fetchedCountries, setFetchedCountries] = useState([]);\n\n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries());\n        }\n        fetchAPI();\n    }, [setFetchedCountries]);\n\n    console.log(fetchedCountries);\n\n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect default=\"\" onChange={(e) => { handleCountryChange(e.target.value) }}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, index) => <option key={index} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n\n    );\n}\n\nexport default CountryPicker;","import React from \"react\";\nimport Cards from \"./Cards/Cards\";\nimport Chart from \"./Chart/Chart\";\nimport CountryPicker from \"./CountryPicker/CountryPicker\";\nimport styles from \"./App.module.css\";\nimport { fetchData } from \"../api\";\nimport covidImage from \"../images/image.png\";\n\nclass App extends React.Component {\n\n    state = {\n        data: {},\n        country: \"\"\n    }\n\n    async componentDidMount() {\n        const fetchedData = await fetchData();\n        console.log(fetchedData);\n        this.setState({ data: fetchedData });\n    }\n\n    handleCountryChange = async (country) => {\n        const fetchedData = await fetchData(country);\n        // console.log(fetchedData);\n        this.setState({ data: fetchedData, country: country });\n    }\n\n    render() {\n        const { data, country } = this.state;\n        return (\n            <div className={styles.container}>\n                <img src={covidImage} alt=\"covid19\" className={styles.image} />\n                <Cards data={data} />\n                <CountryPicker handleCountryChange={this.handleCountryChange} />\n                <Chart data={data} country={country} />\n            </div>\n        );\n    }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./components/App\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__6j1zw\",\"image\":\"App_image__2Zcfy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2p8f9\"};","module.exports = __webpack_public_path__ + \"static/media/image.d7265326.png\";"],"sourceRoot":""}